{"ast":null,"code":"var _jsxFileName = \"E:\\\\Semester 7\\\\Data Science Project\\\\BrandSale_react\\\\brands_sale\\\\src\\\\Components\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    trigger\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log('********************');\n    console.log(data.email);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('password', data.password);\n    history.push('/selectbrand');\n    reset();\n  };\n\n  const history = useHistory();\n  const [username, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      history.push('./home');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-login-section spad\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-6 offset-lg-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"username\",\n                    children: \"Username *\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: `form-control ${errors.name && \"invalid\"}`,\n                    ...register(\"name\", {\n                      required: \"Name is Required\"\n                    }),\n                    onKeyUp: () => {\n                      trigger(\"name\");\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 41\n                  }, this), errors.name && /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-danger\",\n                    children: errors.name.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"email\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: `form-control ${errors.email && \"invalid\"}`,\n                    ...register(\"email\", {\n                      required: \"Email is Required\",\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Invalid email address\"\n                      }\n                    }),\n                    onKeyUp: () => {\n                      trigger(\"email\");\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 41\n                  }, this), errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-danger\",\n                    children: errors.email.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"password\",\n                    children: \"Password *\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: `form-control ${errors.password && \"invalid\"}`,\n                    ...register(\"password\", {\n                      required: \"password is Required\",\n                      pattern: {\n                        value: /[a-z0-9_]{8,20}/,\n                        message: \"Minimum Required password is 8\"\n                      }\n                    }),\n                    onKeyUp: () => {\n                      trigger(\"password\");\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 41\n                  }, this), errors.password && /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-danger\",\n                    children: errors.password.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"con-pass\",\n                    children: \"Confirm Password *\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    id: \"con-pass\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"site-btn register-btn\",\n                  value: \"REGISTER\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"switch-login\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"login.html\",\n                  className: \"or-login\",\n                  children: \"Or Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"VPjjm4MsOjyofUI1LufACSNfSv8=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["E:/Semester 7/Data Science Project/BrandSale_react/brands_sale/src/Components/Register.jsx"],"names":["React","useState","useEffect","useHistory","useForm","axios","Register","register","handleSubmit","formState","errors","reset","trigger","onSubmit","data","console","log","email","localStorage","setItem","name","password","history","push","username","setName","setEmail","setPassword","getItem","required","message","pattern","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport axios from \"axios\";\r\nconst Register = () => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        reset,\r\n        trigger,\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        console.log('********************')\r\n        console.log(data.email)\r\n        localStorage.setItem('name', data.name)\r\n        localStorage.setItem('email', data.email)\r\n        localStorage.setItem('password', data.password)\r\n        history.push('/selectbrand')\r\n        reset();\r\n    };\r\n\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const [username, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            history.push('./home')\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n\r\n            <div className=\"register-login-section spad\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 offset-lg-3\">\r\n                            <div className=\"register-form\">\r\n                                <h2>Register</h2>\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                                    <div className=\"group-input\">\r\n                                        <label for=\"username\">Username *</label>\r\n                                        {/* <input type=\"text\" minlength=\"5\" value={username}  onChange={(e) => setName(e.target.value)} className=\"form-control\" id=\"inputEmail4\" required/> */}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={`form-control ${errors.name && \"invalid\"}`}\r\n                                            {...register(\"name\", { required: \"Name is Required\" })}\r\n                                            onKeyUp={() => {\r\n                                                trigger(\"name\");\r\n                                            }} />{errors.name && (\r\n                                                <small className=\"text-danger\">{errors.name.message}</small>\r\n                                            )}\r\n                                    </div>\r\n                                    <div className=\"group-input\">\r\n                                        <label for=\"email\">Email</label>\r\n                                        {/* <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"form-control\" id=\"inputEmail4\" required /> */}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={`form-control ${errors.email && \"invalid\"}`}\r\n                                            {...register(\"email\", {\r\n                                                required: \"Email is Required\",\r\n                                                pattern: {\r\n                                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                                    message: \"Invalid email address\",\r\n                                                }\r\n                                            })}\r\n                                            onKeyUp={() => {\r\n                                                trigger(\"email\");\r\n                                            }}\r\n                                        />\r\n                                        {errors.email && (\r\n                                            <small className=\"text-danger\">{errors.email.message}</small>\r\n                                        )}\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"group-input\">\r\n                                        <label for=\"password\">Password *</label>\r\n                                        {/* <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"form-control\" id=\"inputPassword4\" required /> */}\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className={`form-control ${errors.password && \"invalid\"}`}\r\n                                            {...register(\"password\", {\r\n                                                required: \"password is Required\",\r\n                                                pattern: {\r\n                                                    value: /[a-z0-9_]{8,20}/,\r\n                                                    message: \"Minimum Required password is 8\",\r\n                                                }\r\n                                            })}\r\n                                            onKeyUp={() => {\r\n                                                trigger(\"password\");\r\n                                            }}\r\n                                        />\r\n                                        {errors.password && (\r\n                                            <small className=\"text-danger\">{errors.password.message}</small>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"group-input\">\r\n                                        <label for=\"con-pass\">Confirm Password *</label>\r\n                                        <input type=\"password\" id=\"con-pass\" required />\r\n                                    </div>\r\n                                    {/* <button type=\"submit\" className=\"site-btn register-btn\">REGISTER</button> */}\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        className=\"site-btn register-btn\"\r\n                                        value=\"REGISTER\"\r\n                                    />\r\n                                </form>\r\n                                <div className=\"switch-login\">\r\n                                    <a href=\"login.html\" className=\"or-login\">Or Login</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}