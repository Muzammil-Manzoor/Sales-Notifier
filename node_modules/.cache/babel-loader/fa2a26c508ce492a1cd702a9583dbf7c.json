{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final Year project Heroko\\\\Frontend\\\\brands_sale\\\\src\\\\Components\\\\Changepassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Changepassword = () => {\n  _s();\n\n  const history = useHistory();\n  const [Err, setErr] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [load, setLoad] = useState(false);\n\n  const submit = async e => {\n    e.preventDefault();\n    setLoad(true);\n    const article = {\n      email: email\n    };\n    const response = await fetch('https://sales-notifierb.herokuapp.com/auth/users/reset_password/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(article)\n    }).then(res => {\n      if (res.status == 204) {\n        alert('password confirmation send check your email');\n        history.push('/login');\n      }\n    });\n    setTimeout(() => {\n      setLoad(false);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Request Password Reset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              placeholder: \"Email\",\n              name: \"email\",\n              value: email,\n              required: true,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"site-btn login-btn\",\n            onClick: submit,\n            disabled: load,\n            children: [load && /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-refresh fa-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 113\n            }, this), \" submit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Changepassword, \"gMjS1UPOEqTdkEFV3hPUaseZgxk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Changepassword;\nexport default Changepassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"Changepassword\");","map":{"version":3,"sources":["E:/Final Year project Heroko/Frontend/brands_sale/src/Components/Changepassword.jsx"],"names":["React","useState","Redirect","useHistory","Header","Changepassword","history","Err","setErr","email","setEmail","load","setLoad","submit","e","preventDefault","article","response","fetch","method","headers","body","JSON","stringify","then","res","status","alert","push","setTimeout","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAMC,OAAN,IAAeX,QAAQ,CAAC,KAAD,CAA7B;;AAGI,QAAMY,MAAM,GAAG,MAAOC,CAAP,IAAa;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,OAAO,CAAC,IAAD,CAAP;AAGA,UAAMI,OAAO,GAAG;AAAEP,MAAAA,KAAK,EAAEA;AAAT,KAAhB;AACA,UAAMQ,QAAQ,GAAG,MAAOC,KAAK,CAAC,kEAAD,EAAqE;AAC9FC,MAAAA,MAAM,EAAE,MADsF;AAE9FC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFqF;AAK9FC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AALwF,KAArE,CAAL,CAMrBQ,IANqB,CAMfC,GAAD,IACR;AACI,UAAGA,GAAG,CAACC,MAAJ,IAAY,GAAf,EAAmB;AACvBC,QAAAA,KAAK,CAAC,6CAAD,CAAL;AACQrB,QAAAA,OAAO,CAACsB,IAAR,CAAa,QAAb;AACH;AACJ,KAZuB,CAAxB;AAaAC,IAAAA,UAAU,CAAC,MAAI;AACXjB,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFS,EAER,IAFQ,CAAV;AAKD,GAxBH;;AA0BJ,sBACI;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AACI,cAAA,SAAS,EAAC,cADd;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,WAAW,EAAC,OAHhB;AAII,cAAA,IAAI,EAAC,OAJT;AAKI,cAAA,KAAK,EAAEH,KALX;AAMI,cAAA,QAAQ,MANZ;AAOI,cAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV;AAP7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAuB,YAAA,SAAS,EAAC,oBAAjC;AAAsD,YAAA,OAAO,EAAElB,MAA/D;AAAuE,YAAA,QAAQ,EAAEF,IAAjF;AAAA,uBAAwFA,IAAI,iBAAI;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAwBH,CA3DD;;GAAMN,c;UAEcF,U;;;KAFdE,c;AA6DN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nconst Changepassword = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [Err, setErr] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [load,setLoad]=useState(false);\r\n\r\n\r\n        const submit = async (e) => {\r\n            e.preventDefault();\r\n            setLoad(true);\r\n\r\n        \r\n            const article = { email: email};\r\n            const response = await  fetch('https://sales-notifierb.herokuapp.com/auth/users/reset_password/', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json'\r\n                \r\n            },\r\n                body: JSON.stringify(article)\r\n            }).then((res)=>\r\n            {\r\n                if(res.status==204){\r\n            alert('password confirmation send check your email')\r\n                    history.push('/login')\r\n                }\r\n            })\r\n            setTimeout(()=>{\r\n                setLoad(false);\r\n            },1000)\r\n        \r\n\r\n          }\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <div className='container'>\r\n            <div className='container mt-5'>\r\n            <h4>Request Password Reset:</h4>\r\n            <form>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        required\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\"  className=\"site-btn login-btn\" onClick={submit} disabled={load}>{load && <i className=\"fa fa-refresh fa-spin\"></i> } submit</button>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Changepassword;\r\n"]},"metadata":{},"sourceType":"module"}