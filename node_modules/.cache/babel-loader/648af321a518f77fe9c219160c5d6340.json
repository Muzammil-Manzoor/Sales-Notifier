{"ast":null,"code":"var _jsxFileName = \"E:\\\\Semester 7\\\\Data Science Project\\\\BrandSale_react\\\\brands_sale\\\\src\\\\Components\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    trigger\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log('********************');\n    console.log(data.email);\n    reset();\n  };\n\n  const history = useHistory();\n  const [username, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      history.push('./home');\n    }\n  }, []); //   const submit = async (e) => {\n  //     e.preventDefault();\n  //     localStorage.setItem('name',username)\n  //     localStorage.setItem('email',email)\n  //     localStorage.setItem('password',password)\n  //     history.push('/selectbrand')\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-login-section spad\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 offset-lg-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"register-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit(onSubmit),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"group-input\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"username\",\n                      children: \"Username *\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: `form-control ${errors.name && \"invalid\"}`,\n                      ...register(\"name\", {\n                        required: \"Name is Required\"\n                      }),\n                      onKeyUp: () => {\n                        trigger(\"name\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 45\n                    }, this), errors.name && /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-danger\",\n                      children: errors.name.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"group-input\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"email\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: `form-control ${errors.email && \"invalid\"}`,\n                      ...register(\"email\", {\n                        required: \"Email is Required\",\n                        pattern: {\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                          message: \"Invalid email address\"\n                        }\n                      }),\n                      onKeyUp: () => {\n                        trigger(\"email\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 45\n                    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-danger\",\n                      children: errors.email.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"group-input\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"password\",\n                      children: \"Password *\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"password\",\n                      className: `form-control ${errors.password && \"invalid\"}`,\n                      ...register(\"password\", {\n                        required: \"password is Required\",\n                        min: {\n                          value: 8,\n                          message: \"Minimum Required password is 8\"\n                        }\n                      }),\n                      onKeyUp: () => {\n                        trigger(\"password\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 45\n                    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-danger\",\n                      children: errors.password.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"group-input\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"con-pass\",\n                      children: \"Confirm Password *\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"password\",\n                      id: \"con-pass\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\",\n                    className: \"site-btn register-btn\",\n                    value: \"REGISTER\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"switch-login\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"login.html\",\n                    className: \"or-login\",\n                    children: \"Or Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"VPjjm4MsOjyofUI1LufACSNfSv8=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["E:/Semester 7/Data Science Project/BrandSale_react/brands_sale/src/Components/Register.jsx"],"names":["React","useState","useEffect","useHistory","useForm","axios","Register","register","handleSubmit","formState","errors","reset","trigger","onSubmit","data","console","log","email","history","username","setName","setEmail","password","setPassword","localStorage","getItem","push","name","required","message","pattern","value","min"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport axios from \"axios\";\r\nconst Register = () => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        reset,\r\n        trigger,\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        console.log('********************')\r\n        console.log(data.email)\r\n        reset();\r\n    };\r\n\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const [username, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            history.push('./home')\r\n        }\r\n    }, [])\r\n\r\n    //   const submit = async (e) => {\r\n    //     e.preventDefault();\r\n\r\n\r\n    //     localStorage.setItem('name',username)\r\n    //     localStorage.setItem('email',email)\r\n    //     localStorage.setItem('password',password)\r\n    //     history.push('/selectbrand')\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <div className=\"register-login-section spad\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 offset-lg-3\">\r\n                                <div className=\"register-form\">\r\n                                    <h2>Register</h2>\r\n                                    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                                        <div className=\"group-input\">\r\n                                            <label for=\"username\">Username *</label>\r\n                                            {/* <input type=\"text\" minlength=\"5\" value={username}  onChange={(e) => setName(e.target.value)} className=\"form-control\" id=\"inputEmail4\" required/> */}\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className={`form-control ${errors.name && \"invalid\"}`}\r\n                                                {...register(\"name\", { required: \"Name is Required\" })}\r\n                                                onKeyUp={() => {\r\n                                                    trigger(\"name\");\r\n                                                }} />{errors.name && (\r\n                                                    <small className=\"text-danger\">{errors.name.message}</small>\r\n                                                )}\r\n                                        </div>\r\n                                        <div className=\"group-input\">\r\n                                            <label for=\"email\">Email</label>\r\n                                            {/* <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"form-control\" id=\"inputEmail4\" required /> */}\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className={`form-control ${errors.email && \"invalid\"}`}\r\n                                                {...register(\"email\", {\r\n                                                    required: \"Email is Required\",\r\n                                                    pattern: {\r\n                                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                                        message: \"Invalid email address\",\r\n                                                    }\r\n                                                })}\r\n                                                onKeyUp={() => {\r\n                                                    trigger(\"email\");\r\n                                                }}\r\n                                            />\r\n                                            {errors.email && (\r\n                                                <small className=\"text-danger\">{errors.email.message}</small>\r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"group-input\">\r\n                                            <label for=\"password\">Password *</label>\r\n                                            {/* <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"form-control\" id=\"inputPassword4\" required /> */}\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className={`form-control ${errors.password && \"invalid\"}`}\r\n                                                {...register(\"password\", {\r\n                                                    required: \"password is Required\",\r\n                                                    min: {\r\n                                                        value: 8,\r\n                                                        message: \"Minimum Required password is 8\",\r\n                                                    }\r\n                                                })}\r\n                                                onKeyUp={() => {\r\n                                                    trigger(\"password\");\r\n                                                }}\r\n                                            />\r\n                                            {errors.password && (\r\n                                                <small className=\"text-danger\">{errors.password.message}</small>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"group-input\">\r\n                                            <label for=\"con-pass\">Confirm Password *</label>\r\n                                            <input type=\"password\" id=\"con-pass\" required />\r\n                                        </div>\r\n                                        {/* <button type=\"submit\" className=\"site-btn register-btn\">REGISTER</button> */}\r\n                                        <input\r\n                                            type=\"submit\"\r\n                                            className=\"site-btn register-btn\"\r\n                                            value=\"REGISTER\"\r\n                                        />\r\n                                    </form>\r\n                                    <div className=\"switch-login\">\r\n                                        <a href=\"login.html\" className=\"or-login\">Or Login</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}