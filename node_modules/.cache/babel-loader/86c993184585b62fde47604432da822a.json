{"ast":null,"code":"var _jsxFileName = \"E:\\\\Semester 7\\\\Data Science Project\\\\BrandSale_react\\\\brands_sale\\\\src\\\\Components\\\\Testing.jsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport React, { PureComponent } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Testing() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    trigger\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log('********************');\n    console.log(data.email);\n    reset();\n  }; // console.log(watch());\n  // console.log(errors.name)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-sm-center pt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6 shadow round pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center pt-3 text-secondary\",\n          children: \"Example Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${errors.name && \"invalid\"}`,\n              ...register(\"name\", {\n                required: \"Name is Required\"\n              }),\n              onKeyUp: () => {\n                trigger(\"name\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Age:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${errors.age && \"invalid\"}`,\n              ...register(\"age\", {\n                required: \"Age is Required\",\n                min: {\n                  value: 13,\n                  message: \"Minimum Required age is 13\"\n                },\n                max: {\n                  value: 65,\n                  message: \"Maximum allowed age is 65\"\n                },\n                pattern: {\n                  value: /[^A-Za-z0-9]+/,\n                  message: \"Only numbers are allowed\"\n                }\n              }),\n              onKeyUp: () => {\n                trigger(\"age\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), errors.age && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.age.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${errors.email && \"invalid\"}`,\n              ...register(\"email\", {\n                required: \"Email is Required\",\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"Enter digit character \"\n                }\n              }),\n              onKeyUp: () => {\n                trigger(\"email\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${errors.phone && \"invalid\"}`,\n              ...register(\"phone\", {\n                required: \"Phone is Required\",\n                pattern: {\n                  value: /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/,\n                  message: \"Invalid phone no\"\n                }\n              }),\n              onKeyUp: () => {\n                trigger(\"phone\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.phone.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: `form-control ${errors.message && \"invalid\"}`,\n              ...register(\"message\", {\n                required: \"Message is Required\",\n                minLength: {\n                  value: 10,\n                  message: \"Minimum Required length is 10\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Maximum allowed length is 50 \"\n                }\n              }),\n              onKeyUp: () => {\n                trigger(\"message\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), errors.message && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-primary my-3\",\n            value: \"Send message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Testing, \"nYXi+K1rNQjCC3Xi/ACu0WIPa4U=\", false, function () {\n  return [useForm];\n});\n\n_c = Testing;\nexport default Testing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testing\");","map":{"version":3,"sources":["E:/Semester 7/Data Science Project/BrandSale_react/brands_sale/src/Components/Testing.jsx"],"names":["useForm","React","PureComponent","Testing","register","handleSubmit","formState","errors","reset","trigger","onSubmit","data","console","log","email","name","required","message","age","min","value","max","pattern","phone","minLength","maxLength"],"mappings":"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","sourcesContent":["\r\nimport { useForm } from \"react-hook-form\";\r\nimport React, { PureComponent } from 'react'\r\n\r\nfunction Testing() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    trigger,\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    console.log('********************')\r\n    console.log(data.email)\r\n    reset();\r\n  };\r\n\r\n\r\n  // console.log(watch());\r\n\r\n  // console.log(errors.name)\r\n\r\n  return (\r\n    <div className=\"container pt-5\">\r\n      <div className=\"row justify-content-sm-center pt-5\">\r\n        <div className=\"col-sm-6 shadow round pb-3\">\r\n          <h1 className=\"text-center pt-3 text-secondary\">Example Form</h1>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <label className=\"col-form-label\">Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${errors.name && \"invalid\"}`}\r\n                {...register(\"name\", { required: \"Name is Required\" })}\r\n                onKeyUp={() => {\r\n                  trigger(\"name\");\r\n                }}\r\n              />\r\n              {errors.name && (\r\n                <small className=\"text-danger\">{errors.name.message}</small>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"col-form-label\">Age:</label>\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${errors.age && \"invalid\"}`}\r\n                {...register(\"age\", {\r\n                  required: \"Age is Required\",\r\n                  min: {\r\n                    value: 13,\r\n                    message: \"Minimum Required age is 13\",\r\n                  },\r\n                  max: {\r\n                    value: 65,\r\n                    message: \"Maximum allowed age is 65\",\r\n                  },\r\n                  pattern: {\r\n                    value: /[^A-Za-z0-9]+/,\r\n                    message: \"Only numbers are allowed\",\r\n                  }\r\n                })}\r\n                onKeyUp={() => {\r\n                  trigger(\"age\");\r\n                }}\r\n              />\r\n              {errors.age && (\r\n                <small className=\"text-danger\">{errors.age.message}</small>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"col-form-label\">Email:</label>\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${errors.email && \"invalid\"}`}\r\n                {...register(\"email\", { required: \"Email is Required\" ,\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: \"Enter digit character \",\r\n                }})}\r\n                onKeyUp={() => {\r\n                  trigger(\"email\");\r\n                }}\r\n              />\r\n              {errors.email && (\r\n                <small className=\"text-danger\">{errors.email.message}</small>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"col-form-label\">Phone:</label>\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${errors.phone && \"invalid\"}`}\r\n                {...register(\"phone\", { required: \"Phone is Required\",\r\n                pattern: {\r\n                  value: /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/,\r\n                  message: \"Invalid phone no\",\r\n                },\r\n               })}\r\n               onKeyUp={() => {\r\n                trigger(\"phone\");\r\n              }}\r\n              />\r\n              {errors.phone && (\r\n                <small className=\"text-danger\">{errors.phone.message}</small>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"col-form-label\">Message:</label>\r\n              <textarea\r\n                className={`form-control ${errors.message && \"invalid\"}`}\r\n                {...register(\"message\", { required: \"Message is Required\",\r\n                minLength: {\r\n                  value: 10,\r\n                  message: \"Minimum Required length is 10\",\r\n                },\r\n                maxLength: {\r\n                  value: 50,\r\n                  message: \"Maximum allowed length is 50 \",\r\n                }\r\n               })}\r\n               onKeyUp={() => {\r\n                trigger(\"message\");\r\n              }}\r\n              ></textarea>\r\n              {errors.message && (\r\n                <small className=\"text-danger\">{errors.message.message}</small>\r\n              )}\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-primary my-3\"\r\n              value=\"Send message\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Testing;"]},"metadata":{},"sourceType":"module"}